package admin

import grails.converters.JSON
import ship.Market
import ship.MobileMessage
import ship.Pager
import ship.ReturnGoods
import ship.ReturnGoodsPOJO
import ship.ReturnOrder
import ship.ShipSN

class AdminMobileController {

    def index() {}


    //分拣
    def fenJian() {
        def shipSN = ShipSN.findAllByStatus("1")
        def returnOrder = ReturnOrder.findAllByWuliu_snInList(shipSN.wuliu_sn)


        returnOrder.returnGoods.flatten().each { returnGoods ->
            if (returnGoods.status == "1") {  //1:新入库退换货商品统计2:分拣完毕退换货商品统计
                if (params.market == returnGoods.daiFaGoods.market) {
                    returnGoods.status = "2"
                    returnGoods.fenjianTime = new Date();
                    returnGoods.fenjianUser = session.loginPOJO.user.email;

                }
            }
        }

        def mm = new MobileMessage()
        mm.message = params.market + "退换货商品分拣完毕，等待代发人员领货退换"
        mm.result = "success"

        render mm as JSON
    }






    //获取退换货市场统计
    def shipForMarket() {

        def shipSN = ShipSN.findAllByStatus("1")
        def returnOrder = ReturnOrder.findAllByWuliu_snInList(shipSN.wuliu_sn)

        def searchMarket = {
        }
        def marketList = Market.createCriteria().list(searchMarket)

        def resultList = []

        marketList.each { market ->
            Long return_num = 0
            def m_map = [:]
            returnOrder.returnGoods.flatten().each { returnGoods ->

                if (returnGoods.status == params.returnGoodsStatus) {  //1:新入库退换货商品统计2:分拣完毕退换货商品统计
                    if (market.market_name == returnGoods.daiFaGoods.market) {
                        return_num = return_num + returnGoods.return_num
                    }
                }


            }
            m_map.market = market.market_name
            m_map.num = return_num
            resultList.add(m_map)

        }


        def mm = new MobileMessage()
        mm.message = "获取市场退换货商品数量成功"
        mm.result = "success"
        mm.model = [list: resultList]

        render mm as JSON

    }

    //代发人员受理退换货
    def daifaShouLiReturn(){
        def returnGoods = ReturnGoods.findAllByStatus("2")
        returnGoods.each { it ->

            if (params.market == it.daiFaGoods.market) {

                println it as JSON

                it.status = "5"//已受理
                it.shouliUser = session.loginPOJO.user.email
                it.shouliTime = new Date();
            }

        }

        def mm = new MobileMessage()
        mm.message = "受理退换货商品列表成功"
        mm.result = "success"

        render mm as JSON

    }

    //代发人员的退换货商品列表接口
    def returnGoodsListForDaiFa() {

        def returnGoods = ReturnGoods.findAllByStatus("2")


        def m_list = []
        returnGoods.each { it ->
            if (params.market == it.daiFaGoods.market) {

                ReturnGoodsPOJO returnGoodsPOJO = new ReturnGoodsPOJO();
                returnGoodsPOJO.returnOrderId = it.returnOrder.id
                returnGoodsPOJO.returnGoodsId = it.id
                returnGoodsPOJO.goodsId = it.daiFaGoods.id
                returnGoodsPOJO.market = it.daiFaGoods.market
                returnGoodsPOJO.floor = it.daiFaGoods.floor
                returnGoodsPOJO.stalls = it.daiFaGoods.stalls
                returnGoodsPOJO.goods_sn = it.daiFaGoods.goods_sn
                returnGoodsPOJO.spec = it.daiFaGoods.spec
                returnGoodsPOJO.num = it.daiFaGoods.num
                returnGoodsPOJO.wuliu = it.returnOrder.wuliu
                returnGoodsPOJO.wuliu_sn = it.returnOrder.wuliu_sn
                returnGoodsPOJO.orderSN = it.returnOrder.orderSN
                m_list.add(returnGoodsPOJO)
            }

        }

        def mm = new MobileMessage()
        mm.message = "获取" + params.market + "退换货商品列表成功,等待代发人员受理"
        mm.result = "success"
        mm.model = [list: m_list]

        render mm as JSON
    }

    //根据市场查询下面的退换货商品
    def returnGoodsList() {
        def shipSN = ShipSN.findAllByStatus("1")
        def returnOrder = ReturnOrder.findAllByWuliu_snInList(shipSN.wuliu_sn)
        def m_list = []
        returnOrder.returnGoods.flatten().each { returnGoods ->
            if (returnGoods.status == params.returnGoodsStatus) {  //1:新入库2:分拣完毕
                if (params.market == returnGoods.daiFaGoods.market) {

                    ReturnGoodsPOJO returnGoodsPOJO = new ReturnGoodsPOJO();
                    returnGoodsPOJO.returnOrderId = returnGoods.returnOrder.id
                    returnGoodsPOJO.returnGoodsId = returnGoods.id
                    returnGoodsPOJO.goodsId = returnGoods.daiFaGoods.id
                    returnGoodsPOJO.market = returnGoods.daiFaGoods.market
                    returnGoodsPOJO.floor = returnGoods.daiFaGoods.floor
                    returnGoodsPOJO.stalls = returnGoods.daiFaGoods.stalls
                    returnGoodsPOJO.goods_sn = returnGoods.daiFaGoods.goods_sn
                    returnGoodsPOJO.spec = returnGoods.daiFaGoods.spec
                    returnGoodsPOJO.num = returnGoods.daiFaGoods.num
                    returnGoodsPOJO.wuliu = returnGoods.returnOrder.wuliu
                    returnGoodsPOJO.wuliu_sn = returnGoods.returnOrder.wuliu_sn
                    returnGoodsPOJO.orderSN = returnGoods.returnOrder.orderSN
                    m_list.add(returnGoodsPOJO)
                }
            }

        }

        def mm = new MobileMessage()
        mm.message = "获取" + params.market + "退换货商品列表成功"
        mm.result = "success"
        mm.model = [list: m_list]

        render mm as JSON


    }

    //物流单号列表查询
    def shipList() {


        if (!params.max) {
            params.max = 10
        } else {
            params.max = new Long(params.max)
        }
        if (!params.offset) params.offset = 0
        if (!params.sort) params.sort = "dateCreated"
        if (!params.order) params.order = "desc"


        def searchClosure = {


            if (params.status == "wait") {
                eq("status", "1")
            }
            if (params.status == "noowner") {
                inList("status", ["0", "2"])
            }

        }

        def o = ShipSN.createCriteria();
        def results = o.list(params, searchClosure)

        def map = [list: results, total: results.totalCount]


        if (params.mobile == "mobile") {

            //封装分页传给手机端
            def pager = new Pager(max: params.max, "offset": params.offset, "totalPage": ((results.totalCount - 1) / params.max + 1) as int, total: results.totalCount)
            map.put("pager", pager)

            def mm = new MobileMessage()
            mm.message = "获取物流登记统计列表成功"
            mm.result = "success"
            mm.model = map

            render mm as JSON
        }


    }

    def regShipSNNum() {
        //查询入库商品数量
        def shipSN = ShipSN.findAllByStatus("1")
        def confirmOrder = ReturnOrder.findAllByWuliu_snInList(shipSN.wuliu_sn)


        Long new_num = 0;//新入库商品数量
        Long wait_num = 0;//分拣完毕商品数量
        confirmOrder.returnGoods.flatten().each { returnGoods ->
            if (returnGoods.status == "1") {
                new_num = new_num + returnGoods.return_num
            }
            if (returnGoods.status == "2") {
                wait_num = wait_num + returnGoods.return_num
            }

        }


        def noowner = ShipSN.countByStatusInList(["0", "2"])

        def map = [new_num: new_num, wait: wait_num, noowner: noowner]
        def mm = new MobileMessage()
        mm.message = "获取物流登记统计数据成功"
        mm.result = "success"
        mm.model = map

        render mm as JSON
    }

    //扫描退回包裹的物流单号
    def checkReturnOrderSN() {
        def mm = new MobileMessage()
        ReturnOrder returnOrder = ReturnOrder.findByWuliu_snAndStatus(params.wuliu_sn, "1")//已经支付的退换货申请
        if (!returnOrder) {

            ShipSN shipSN = ShipSN.findByWuliu_sn(params.wuliu_sn)
            if (!shipSN) {
                shipSN = new ShipSN();
            }
            shipSN.num = params.num as int
            shipSN.wuliu_sn = params.wuliu_sn
            shipSN.status = "0"
            shipSN.save();

            mm.message = "系统中没有该物流单号的退换货申请,录入无主包裹"
        } else {
            int num = 0;
            returnOrder.returnGoods.each { it ->

                num = num + (it.num as int);
            }

            if (num == (params.num as int)) {
                ShipSN shipSN = ShipSN.findByWuliu_sn(params.wuliu_sn)
                if (!shipSN) {
                    shipSN = new ShipSN();
                }
                shipSN.num = params.num as int
                shipSN.wuliu_sn = params.wuliu_sn
                shipSN.status = "1"
                shipSN.save();



                returnOrder.returnGoods.each { it ->

                    it.rukuUser = session.loginPOJO.user.email
                    it.rukuTime = new Date();
                    it.status = "1" //记录该退换货商品办事处入库
                }



                mm.message = "物流单号与商品数量匹配，录入新入库"


            } else {
                ShipSN shipSN = ShipSN.findByWuliu_sn(params.wuliu_sn)
                if (!shipSN) {
                    shipSN = new ShipSN();
                }
                shipSN.num = params.num as int
                shipSN.wuliu_sn = params.wuliu_sn
                shipSN.status = "2"
                shipSN.save();


                mm.message = "物流单号准确，商品数量不匹配，录入无主包裹"
            }
        }

        //查询入库商品数量
        def shipSN = ShipSN.findAllByStatus("1")
        def confirmOrder = ReturnOrder.findAllByWuliu_snInList(shipSN.wuliu_sn)


        Long new_num = 0;//新入库商品数量
        Long wait_num = 0;//分拣完毕商品数量
        confirmOrder.returnGoods.flatten().each { returnGoods ->
            if (returnGoods.status == "1") {
                new_num = new_num + returnGoods.return_num
            }
            if (returnGoods.status == "2") {
                wait_num = wait_num + returnGoods.return_num
            }

        }


        def noowner = ShipSN.countByStatusInList(["0", "2"])

        def map = [new_num: new_num, wait: wait_num, noowner: noowner]
        mm.result = "success"
        mm.model = map

        render mm as JSON
        return;
    }
}
